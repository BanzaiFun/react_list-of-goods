{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","selectedNumbers","getReorderedGoods","goods","sortType","isReversed","minLength","visibleGoods","sort","a","b","localeCompare","length","reverse","splice","App","state","isStarted","start","setState","maxLengthGoods","e","currentTarget","value","sortAlphabetically","sortByLength","reset","this","className","type","onClick","onChange","map","number","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,kFAfCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IASpD,SAASC,EACPC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOJ,GAiBzB,OAfAI,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAK,EACH,OAAOK,EAAEL,GAAUO,cAAcD,EAAEN,IACrC,KAAK,EACH,OAAOK,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITP,GACFE,EAAaM,UAGRN,EAAaO,OAAO,EAAGR,I,SA9B3BP,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAMgB,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAU,EACVa,WAAW,EACXX,UAAW,GALf,EAQEY,MAAQ,WACN,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBC,WAAYD,EAAMC,eAVxB,EAcEG,eAAiB,SAACC,GAChB,EAAKF,SAAS,CAAEb,WAAYe,EAAEC,cAAcC,SAfhD,EAkBEC,mBAAqB,WACnB,EAAKL,SAAS,CAAEf,SAAU,KAnB9B,EAsBEqB,aAAe,WACb,EAAKN,SAAS,CAAEf,SAAU,KAvB9B,EA0BEsB,MAAQ,WACN,EAAKP,SAAS,CACZd,YAAY,EACZD,SAAU,KA7BhB,EAiCES,QAAU,WACR,EAAKM,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBAnCzB,4CAuCE,WAAU,IAAD,OACP,EAKIsB,KAAKX,MAJPX,EADF,EACEA,WACAD,EAFF,EAEEA,SACAa,EAHF,EAGEA,UACAX,EAJF,EAIEA,UAGF,OACE,sBAAKsB,UAAU,MAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKT,MAHhB,SAKGD,EAAY,MAAQ,UAGtBA,GACC,sBAAKW,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKH,mBAHhB,iCAQA,wBACEK,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKF,aAHhB,4BAQA,wBACEI,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKd,QAHhB,qBAQA,wBACEgB,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKD,MAHhB,mBAQA,qBAAKE,UAAU,iBAAf,SACE,wBAAQG,SAAU,SAACV,GAAD,OAAO,EAAKD,eAAeC,IAA7C,SACGpB,EAAgB+B,KAAI,SAACC,GAAD,OACnB,wBAEEV,MAAOU,EAFT,SAIGA,GAJH,sBACsBA,WAS5B,oBAAIL,UAAU,QAAd,SACG1B,EACCF,EACAI,EACAC,EACAC,GACA0B,KAAI,SAAAE,GAAI,OACR,oBAEEN,UAAU,cAFZ,SAIGM,GAHIA,kBAhHvB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f3ff92c5.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { ChangeEvent } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst selectedNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a[sortType].localeCompare(b[sortType]);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods.splice(0, minLength);\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n    isStarted: false,\n    minLength: 1,\n  };\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  maxLengthGoods = (e: ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ minLength: +e.currentTarget.value });\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n      isStarted,\n      minLength,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          className=\"button is-info\"\n          onClick={this.start}\n        >\n          {isStarted ? 'End' : 'Start'}\n        </button>\n\n        {isStarted && (\n          <div className=\"Content\">\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <div className=\"select is-info\">\n              <select onChange={(e) => this.maxLengthGoods(e)}>\n                {selectedNumbers.map((number) => (\n                  <option\n                    key={`selectNumber${number}`}\n                    value={number}\n                  >\n                    {number}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <ol className=\"Goods\">\n              {getReorderedGoods(\n                goodsFromServer,\n                sortType,\n                isReversed,\n                minLength,\n              ).map(good => (\n                <li\n                  key={good}\n                  className=\"Goods__item\"\n                >\n                  {good}\n                </li>\n              ))}\n            </ol>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}